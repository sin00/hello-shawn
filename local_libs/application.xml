<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<reactor:application name="ce6a091f-5f56-48b2-867d-fc543e21cd44_2c9598045ad67039015ad6a8eb150001_alarm" xmlns:reactor="http://www.ericsson.com/reactor/application/v1">
    <description>rms application</description>
    <resourceBundle name="rms-resources-v2" version="1.0-SNAPSHOT"/>
    <rules>
        <fission-rule name="">
            <when>
                <parameter>false</parameter>
            </when>
            <then>
                <action>
                    <function name="RaiseAlarmFunction">
                        <constant></constant>
                        <constant></constant>
                        <constant>warning</constant>
                        <parameter>event</parameter>
                        <constant></constant>
                        <constant></constant>
                        <constant>{"notificationInfo":{"receivers":[]}}</constant>
                    </function>
                </action>
            </then>
        </fission-rule>
        <fission-rule name="novalue">
            <when>
                <and>
                    <or>
                        <and>
                            <eq>
                                <parameter>event.meta['eventName']</parameter>
                                <constant>ANALYSIS_EVENT</constant>
                            </eq>
                            <eq>
                                <parameter>event.meta['value']?.get('tag')</parameter>
                                <constant>noVehicleInsurance</constant>
                            </eq>
                            <or>
                                <eq>
                                    <parameter>event.meta['value']?.get('severity')</parameter>
                                    <constant>critical</constant>
                                </eq>
                                <eq>
                                    <parameter>event.meta['value']?.get('severity')</parameter>
                                    <constant>major</constant>
                                </eq>
                                <eq>
                                    <parameter>event.meta['value']?.get('severity')</parameter>
                                    <constant>minor</constant>
                                </eq>
                                <eq>
                                    <parameter>event.meta['value']?.get('severity')</parameter>
                                    <constant>warn</constant>
                                </eq>
                            </or>
                        </and>
                        <and>
                            <eq>
                                <parameter>event.meta['eventName']</parameter>
                                <constant>ANALYSIS_EVENT</constant>
                            </eq>
                            <eq>
                                <parameter>event.meta['value']?.get('tag')</parameter>
                                <constant>noDriverLicense</constant>
                            </eq>
                            <or>
                                <eq>
                                    <parameter>event.meta['value']?.get('severity')</parameter>
                                    <constant>critical</constant>
                                </eq>
                                <eq>
                                    <parameter>event.meta['value']?.get('severity')</parameter>
                                    <constant>major</constant>
                                </eq>
                                <eq>
                                    <parameter>event.meta['value']?.get('severity')</parameter>
                                    <constant>minor</constant>
                                </eq>
                            </or>
                        </and>
                        <and>
                            <eq>
                                <parameter>event.meta['eventName']</parameter>
                                <constant>ANALYSIS_EVENT</constant>
                            </eq>
                            <eq>
                                <parameter>event.meta['value']?.get('tag')</parameter>
                                <constant>noPermit</constant>
                            </eq>
                            <or>
                                <eq>
                                    <parameter>event.meta['value']?.get('severity')</parameter>
                                    <constant>critical</constant>
                                </eq>
                                <eq>
                                    <parameter>event.meta['value']?.get('severity')</parameter>
                                    <constant>major</constant>
                                </eq>
                            </or>
                        </and>
                        <and>
                            <eq>
                                <parameter>event.meta['eventName']</parameter>
                                <constant>ANALYSIS_EVENT</constant>
                            </eq>
                            <eq>
                                <parameter>event.meta['value']?.get('tag')</parameter>
                                <constant>noDriverInsurance</constant>
                            </eq>
                            <or>
                                <eq>
                                    <parameter>event.meta['value']?.get('severity')</parameter>
                                    <constant>critical</constant>
                                </eq>
                            </or>
                        </and>
                        <function name="VehicleDuplicateLoginCheckFunction">
                            <parameter>event</parameter>
                            <constant>4028834c5e1329a0015e175470710002</constant>
                        </function>
                        <and>
                            <eq>
                                <parameter>event.meta['eventName']</parameter>
                                <constant>ANALYSIS_EVENT</constant>
                            </eq>
                            <eq>
                                <parameter>event.meta['value']?.get('tag')</parameter>
                                <constant>speedLimitViolation</constant>
                            </eq>
                        </and>
                        <and>
                            <eq>
                                <parameter>event.meta['eventName']</parameter>
                                <constant>ANALYSIS_EVENT</constant>
                            </eq>
                            <eq>
                                <parameter>event.meta['value']?.get('tag')</parameter>
                                <constant>irregularDeclinedTripNum</constant>
                            </eq>
                        </and>
                        <and>
                            <eq>
                                <parameter>event.meta['eventName']</parameter>
                                <constant>ANALYSIS_EVENT</constant>
                            </eq>
                            <eq>
                                <parameter>event.meta['value']?.get('tag')</parameter>
                                <constant>notCompliantTariff</constant>
                            </eq>
                        </and>
                        <and>
                            <eq>
                                <parameter>event.meta['eventName']</parameter>
                                <constant>ANALYSIS_EVENT</constant>
                            </eq>
                            <eq>
                                <parameter>event.meta['value']?.get('tag')</parameter>
                                <constant>dataMismatchInVehicleAndCompany</constant>
                            </eq>
                        </and>
                        <and>
                            <eq>
                                <parameter>event.meta['eventName']</parameter>
                                <constant>ANALYSIS_EVENT</constant>
                            </eq>
                            <eq>
                                <parameter>event.meta['value']?.get('tag')</parameter>
                                <constant>noBasicData</constant>
                            </eq>
                        </and>
                        <and>
                            <eq>
                                <parameter>event.meta['eventName']</parameter>
                                <constant>ANALYSIS_EVENT</constant>
                            </eq>
                            <eq>
                                <parameter>event.meta['value']?.get('tag')</parameter>
                                <constant>idle</constant>
                            </eq>
                        </and>
                        <and>
                            <eq>
                                <parameter>event.meta['eventName']</parameter>
                                <constant>ANALYSIS_EVENT</constant>
                            </eq>
                            <eq>
                                <parameter>event.meta['value']?.get('tag')</parameter>
                                <constant>numberOfDeclinedTrip</constant>
                            </eq>
                        </and>
                        <and>
                            <eq>
                                <parameter>event.meta['eventName']</parameter>
                                <constant>ANALYSIS_EVENT</constant>
                            </eq>
                            <eq>
                                <parameter>event.meta['value']?.get('tag')</parameter>
                                <constant>noBreaks</constant>
                            </eq>
                        </and>
                    </or>
                    <and>
                        <and>
                            <eq>
                                <parameter>event.meta['eventName']</parameter>
                                <constant>braking</constant>
                            </eq>
                            <eq>
                                <parameter>event.meta['value']?.get('status')</parameter>
                                <constant>finished</constant>
                            </eq>
                        </and>
                        <function name="ExitGeofenceFunction">
                            <parameter>event</parameter>
                            <constant>4028834c5e1329a0015e175470710002</constant>
                            <constant>545</constant>
                        </function>
                        <function name="EnterGeofenceFunction">
                            <parameter>event</parameter>
                            <constant>4028834c5e1329a0015e175470710002</constant>
                            <constant>165</constant>
                        </function>
                        <function name="InGeofenceFunction">
                            <parameter>event</parameter>
                            <constant>4028834c5e1329a0015e175470710002</constant>
                            <constant>450</constant>
                        </function>
                    </and>
                    <not>
                        <function name="VehicleMoveWithoutDriverLoginCheckFunction">
                            <parameter>event</parameter>
                            <constant>4028834c5e1329a0015e175470710002</constant>
                        </function>
                        <gt>
                            <parameter>(event.meta['body']?.get('Basic')?.get('odometer')==null)?0:(event.meta['body']?.get('Basic')?.get('odometer'))</parameter>
                            <constant>1</constant>
                        </gt>
                        <gt>
                            <parameter>(event.meta['body']?.get('Basic')?.get('speed')==null)?0:(event.meta['body']?.get('Basic')?.get('speed'))</parameter>
                            <constant>0</constant>
                        </gt>
                        <gt>
                            <parameter>(event.meta['body']?.get('Running')?.get('fuelLevel')==null)?2147483647:(event.meta['body']?.get('Running')?.get('fuelLevel'))</parameter>
                            <constant>3</constant>
                        </gt>
                        <lt>
                            <parameter>(event.meta['body']?.get('Maintenance')?.get('distanceToService')==null)?0:(event.meta['body']?.get('Maintenance')?.get('distanceToService'))</parameter>
                            <constant>4</constant>
                        </lt>
                        <gt>
                            <parameter>(event.meta['body']?.get('Maintenance')?.get('engineHrsToService')==null)?0:(event.meta['body']?.get('Maintenance')?.get('engineHrsToService'))</parameter>
                            <constant>120.0</constant>
                        </gt>
                        <lt>
                            <parameter>(event.meta['body']?.get('Maintenance')?.get('daysToService')==null)?0:(event.meta['body']?.get('Maintenance')?.get('daysToService'))</parameter>
                            <constant>6</constant>
                        </lt>
                        <eq>
                            <parameter>event.meta['body']?.get('Running')?.get('fuelLevelStatus')</parameter>
                            <constant>0</constant>
                        </eq>
                        <function name="TripUnExpectedDriverCheckFunction">
                            <parameter>event</parameter>
                            <constant>4028834c5e1329a0015e175470710002</constant>
                        </function>
                        <function name="TripStartWithoutDriverLoginCheckFunction">
                            <parameter>event</parameter>
                            <constant>4028834c5e1329a0015e175470710002</constant>
                        </function>
                        <function name="TripStartWithUnauthorizedDriverCheckFunction">
                            <parameter>event</parameter>
                            <constant>4028834c5e1329a0015e175470710002</constant>
                        </function>
                        <function name="TripDriverDiffOwnerCheckFunction">
                            <parameter>event</parameter>
                            <constant>4028834c5e1329a0015e175470710002</constant>
                        </function>
                        <eq>
                            <parameter>event.meta['body']?.get('Event')?.get('tag')</parameter>
                            <constant>passengerOn</constant>
                        </eq>
                        <eq>
                            <parameter>event.meta['body']?.get('Event')?.get('tag')</parameter>
                            <constant>accident</constant>
                        </eq>
                        <eq>
                            <parameter>event.meta['body']?.get('Event')?.get('tag')</parameter>
                            <constant>theft</constant>
                        </eq>
                        <eq>
                            <parameter>event.meta['body']?.get('Event')?.get('tag')</parameter>
                            <constant>driverLogin</constant>
                        </eq>
                        <eq>
                            <parameter>event.meta['body']?.get('Event')?.get('tag')</parameter>
                            <constant>driverLogout</constant>
                        </eq>
                        <eq>
                            <parameter>event.meta['body']?.get('Event')?.get('tag')</parameter>
                            <constant>driverAlarmTrigger</constant>
                        </eq>
                        <function name="PassengerOnWithoutTripCheckFunction">
                            <parameter>event</parameter>
                            <constant>4028834c5e1329a0015e175470710002</constant>
                        </function>
                        <eq>
                            <parameter>event.meta['body']?.get('Event')?.get('tag')</parameter>
                            <constant>passengerOff</constant>
                        </eq>
                        <and>
                            <eq>
                                <parameter>event.meta['body']?.get('Event')?.get('tag')</parameter>
                                <constant>braking</constant>
                            </eq>
                            <gt>
                                <parameter>event.meta['body']?.get('DrivingBehavior')?.get('braking')?.get('peakValue')</parameter>
                                <constant>7</constant>
                            </gt>
                        </and>
                        <and>
                            <eq>
                                <parameter>event.meta['body']?.get('Event')?.get('tag')</parameter>
                                <constant>accelerating</constant>
                            </eq>
                            <gt>
                                <parameter>event.meta['body']?.get('DrivingBehavior')?.get('accelerating')?.get('peakValue')</parameter>
                                <constant>8</constant>
                            </gt>
                        </and>
                        <and>
                            <eq>
                                <parameter>event.meta['body']?.get('Event')?.get('tag')</parameter>
                                <constant>harshLaneChanging</constant>
                            </eq>
                            <gt>
                                <parameter>event.meta['body']?.get('DrivingBehavior')?.get('harshLaneChanging')?.get('peakValue')</parameter>
                                <constant>9</constant>
                            </gt>
                        </and>
                        <and>
                            <eq>
                                <parameter>event.meta['body']?.get('Event')?.get('tag')</parameter>
                                <constant>cornering</constant>
                            </eq>
                            <gt>
                                <parameter>event.meta['body']?.get('DrivingBehavior')?.get('cornering')?.get('peakValue')</parameter>
                                <constant>10</constant>
                            </gt>
                        </and>
                        <and>
                            <eq>
                                <parameter>event.meta['body']?.get('Event')?.get('tag')</parameter>
                                <constant>harshRPM</constant>
                            </eq>
                            <gt>
                                <parameter>event.meta['body']?.get('DrivingBehavior')?.get('harshRPM')?.get('peakValue')</parameter>
                                <constant>11</constant>
                            </gt>
                        </and>
                        <eq>
                            <parameter>event.meta['body']?.get('Event')?.get('tag')</parameter>
                            <constant>fatiguedDriving</constant>
                        </eq>
                        <and>
                            <eq>
                                <parameter>event.meta['body']?.get('Event')?.get('tag')</parameter>
                                <constant>excessSpeeding</constant>
                            </eq>
                            <gt>
                                <parameter>event.meta['body']?.get('DrivingBehavior')?.get('excessSpeeding')?.get('peakValue')</parameter>
                                <constant>13</constant>
                            </gt>
                        </and>
                        <and>
                            <eq>
                                <parameter>event.meta['body']?.get('Event')?.get('tag')</parameter>
                                <constant>speedbreakerBump</constant>
                            </eq>
                            <gt>
                                <parameter>event.meta['body']?.get('DrivingBehavior')?.get('speedbreakerBump')?.get('peakValue')</parameter>
                                <constant>14</constant>
                            </gt>
                        </and>
                        <or>
                            <lt>
                                <parameter>(event.meta['body']?.get('Maintenance')?.get('distanceToService')==null)?0:(event.meta['body']?.get('Maintenance')?.get('distanceToService'))</parameter>
                                <constant>15</constant>
                            </lt>
                            <gt>
                                <parameter>(event.meta['body']?.get('Basic')?.get('odometer')==null)?0:(event.meta['body']?.get('Basic')?.get('odometer'))</parameter>
                                <constant>16</constant>
                            </gt>
                        </or>
                        <function name="TripVehicleDiffOwnerCheckFunction">
                            <parameter>event</parameter>
                            <constant>4028834c5e1329a0015e175470710002</constant>
                        </function>
                        <eq>
                            <parameter>event.meta['body']?.get('Event')?.get('tag')</parameter>
                            <constant>passengerAlarmTrigger</constant>
                        </eq>
                    </not>
                </and>
            </when>
            <then>
                <action>
                    <function name="RaiseAlarmFunction">
                        <constant>irregularDriving</constant>
                        <constant>harshRPM</constant>
                        <constant>warning</constant>
                        <parameter>event</parameter>
                        <constant>novalue</constant>
                        <constant></constant>
                        <constant>{"notificationInfo":{"receivers":[]}}</constant>
                    </function>
                </action>
            </then>
        </fission-rule>
    </rules>
    <streams>
        <stream name="rms-kafka-msg-stream">
            <receiver name="rms-kafka-msg-receiver" type="kafkaReceiver">
                <params>
                    <param name="kafkaConfig"><![CDATA[{"bootstrapServers":"192.168.2.189:9092","topics":"ce6a091f-5f56-48b2-867d-fc543e21cd44.FMS.TELEMATICS.STATUS,ce6a091f-5f56-48b2-867d-fc543e21cd44.FMS.TELEMATICS.EVENT,FMS.TRAFFIC.TRIP,FMS.EVENT.ANALYSIS"}]]></param>
                </params>
            </receiver>
            <transformer name="rms-to-json-converter" type="fmsRmsTransformer"/>
        </stream>
    </streams>
</reactor:application>